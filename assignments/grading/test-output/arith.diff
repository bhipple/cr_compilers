1,221c1,56
< CLASS
< TYPEID A
< '{'
< OBJECTID var
< ':'
< TYPEID Int
< ASSIGN
< INT_CONST 0
< ';'
< OBJECTID value
< '('
< ')'
< ':'
< TYPEID Int
< '{'
< OBJECTID var
< '}'
< ';'
< OBJECTID set_var
< '('
< OBJECTID num
< ':'
< TYPEID Int
< ')'
< ':'
< TYPEID SELF_TYPE
< '{'
< '{'
< OBJECTID var
< ASSIGN
< OBJECTID num
< ';'
< OBJECTID self
< ';'
< '}'
< '}'
< ';'
< OBJECTID method1
< '('
< OBJECTID num
< ':'
< TYPEID Int
< ')'
< ':'
< TYPEID SELF_TYPE
< '{'
< OBJECTID self
< '}'
< ';'
< OBJECTID method2
< '('
< OBJECTID num1
< ':'
< TYPEID Int
< ','
< OBJECTID num2
< ':'
< TYPEID Int
< ')'
< ':'
< TYPEID B
< '{'
< '('
< LET
< OBJECTID x
< ':'
< TYPEID Int
< IN
< '{'
< OBJECTID x
< ASSIGN
< OBJECTID num1
< '+'
< OBJECTID num2
< ';'
< '('
< NEW
< TYPEID B
< ')'
< '.'
< OBJECTID set_var
< '('
< OBJECTID x
< ')'
< ';'
< '}'
< ')'
< '}'
< ';'
< OBJECTID method3
< '('
< OBJECTID num
< ':'
< TYPEID Int
< ')'
< ':'
< TYPEID C
< '{'
< '('
< LET
< OBJECTID x
< ':'
< TYPEID Int
< IN
< '{'
< OBJECTID x
< ASSIGN
< '~'
< OBJECTID num
< ';'
< '('
< NEW
< TYPEID C
< ')'
< '.'
< OBJECTID set_var
< '('
< OBJECTID x
< ')'
< ';'
< '}'
< ')'
< '}'
< ';'
< OBJECTID method4
< '('
< OBJECTID num1
< ':'
< TYPEID Int
< ','
< OBJECTID num2
< ':'
< TYPEID Int
< ')'
< ':'
< TYPEID D
< '{'
< IF
< OBJECTID num2
< '<'
< OBJECTID num1
< THEN
< '('
< LET
< OBJECTID x
< ':'
< TYPEID Int
< IN
< '{'
< OBJECTID x
< ASSIGN
< OBJECTID num1
< '-'
< OBJECTID num2
< ';'
< '('
< NEW
< TYPEID D
< ')'
< '.'
< OBJECTID set_var
< '('
< OBJECTID x
< ')'
< ';'
< '}'
< ')'
< ELSE
< '('
< LET
< OBJECTID x
< ':'
< TYPEID Int
< IN
< '{'
< OBJECTID x
< ASSIGN
< OBJECTID num2
< '-'
< OBJECTID num1
< ';'
< '('
< NEW
< TYPEID D
< ')'
< '.'
< OBJECTID set_var
< '('
< OBJECTID x
< ')'
< ';'
< '}'
< ')'
< FI
< '}'
< ';'
< OBJECTID method5
< '('
< OBJECTID num
< ':'
< TYPEID Int
< ')'
< ':'
< TYPEID E
< '{'
< '('
< LET
< OBJECTID x
< ':'
< TYPEID Int
< ASSIGN
< INT_CONST 1
< IN
< '{'
< '('
< LET
< OBJECTID y
< ':'
< TYPEID Int
< ASSIGN
< INT_CONST 1
---
> *)**#7 CLASS
> A{var:#9 IN
> t<-#9 INT_CONST 0
> ;value():#11 IN
> t{var};set_var(num:#13 IN
> t):{{var<-num;self;}};method#20 INT_CONST 1
> (num:#20 IN
> t):{self};method#24 INT_CONST 2
> (num#24 INT_CONST 1
> :#24 IN
> t,num#24 INT_CONST 2
> :#24 IN
> t):B{(#25 LET
> x:#25 IN
> t#25 IN
> {x<-num#27 INT_CONST 1
> +num#27 INT_CONST 2
> ;(#28 NEW
> B).set_var(x);})};method#33 INT_CONST 3
> (num:#33 IN
> t):C{(#34 LET
> x:#34 IN
> t#34 IN
> {x<-~num;(#37 NEW
> C).set_var(x);})};method#42 INT_CONST 4
> (num#42 INT_CONST 1
> :#42 IN
> t,num#42 INT_CONST 2
> :#42 IN
> t):D{#43 IF
> num#43 INT_CONST 2
> <num#43 INT_CONST 1
> THEN
> (#44 LET
> x:#44 IN
> t#44 IN
> {x<-num#46 INT_CONST 1
> -num#46 INT_CONST 2
> ;(#47 NEW
> D).set_var(x);})#50 ELSE
> (#51 LET
> x:#51 IN
> t#51 IN
> {x<-num#53 INT_CONST 2
> -num#53 INT_CONST 1
> ;(#54 NEW
> D).set_var(x);})#57 FI
> };method#60 INT_CONST 5
> (num:#60 IN
> t):E{(#61 LET
> x:#61 IN
> t<-#61 INT_CONST 1
> IN
> {(#63 LET
> y:#63 IN
> t<-#63 INT_CONST 1
224,405c59,91
< OBJECTID y
< LE
< OBJECTID num
< LOOP
< '{'
< OBJECTID x
< ASSIGN
< OBJECTID x
< '*'
< OBJECTID y
< ';'
< OBJECTID y
< ASSIGN
< OBJECTID y
< '+'
< INT_CONST 1
< ';'
< '}'
< POOL
< ')'
< ';'
< '('
< NEW
< TYPEID E
< ')'
< '.'
< OBJECTID set_var
< '('
< OBJECTID x
< ')'
< ';'
< '}'
< ')'
< '}'
< ';'
< '}'
< ';'
< CLASS
< TYPEID B
< INHERITS
< TYPEID A
< '{'
< OBJECTID method5
< '('
< OBJECTID num
< ':'
< TYPEID Int
< ')'
< ':'
< TYPEID E
< '{'
< '('
< LET
< OBJECTID x
< ':'
< TYPEID Int
< IN
< '{'
< OBJECTID x
< ASSIGN
< OBJECTID num
< '*'
< OBJECTID num
< ';'
< '('
< NEW
< TYPEID E
< ')'
< '.'
< OBJECTID set_var
< '('
< OBJECTID x
< ')'
< ';'
< '}'
< ')'
< '}'
< ';'
< '}'
< ';'
< CLASS
< TYPEID C
< INHERITS
< TYPEID B
< '{'
< OBJECTID method6
< '('
< OBJECTID num
< ':'
< TYPEID Int
< ')'
< ':'
< TYPEID A
< '{'
< '('
< LET
< OBJECTID x
< ':'
< TYPEID Int
< IN
< '{'
< OBJECTID x
< ASSIGN
< '~'
< OBJECTID num
< ';'
< '('
< NEW
< TYPEID A
< ')'
< '.'
< OBJECTID set_var
< '('
< OBJECTID x
< ')'
< ';'
< '}'
< ')'
< '}'
< ';'
< OBJECTID method5
< '('
< OBJECTID num
< ':'
< TYPEID Int
< ')'
< ':'
< TYPEID E
< '{'
< '('
< LET
< OBJECTID x
< ':'
< TYPEID Int
< IN
< '{'
< OBJECTID x
< ASSIGN
< OBJECTID num
< '*'
< OBJECTID num
< '*'
< OBJECTID num
< ';'
< '('
< NEW
< TYPEID E
< ')'
< '.'
< OBJECTID set_var
< '('
< OBJECTID x
< ')'
< ';'
< '}'
< ')'
< '}'
< ';'
< '}'
< ';'
< CLASS
< TYPEID D
< INHERITS
< TYPEID B
< '{'
< OBJECTID method7
< '('
< OBJECTID num
< ':'
< TYPEID Int
< ')'
< ':'
< TYPEID Bool
< '{'
< '('
< LET
< OBJECTID x
< ':'
< TYPEID Int
< ASSIGN
< OBJECTID num
< IN
---
> y<=num#64 LOOP
> {x<-x*y;y<-y+#67 INT_CONST 1
> ;}#69 POOL
> );(#71 NEW
> E).set_var(x);})};};#78 CLASS
> B#78 INHERITS
> A{method#80 INT_CONST 5
> (num:#80 IN
> t):E{(#81 LET
> x:#81 IN
> t#81 IN
> {x<-num*num;(#84 NEW
> E).set_var(x);})};};#91 CLASS
> C#91 INHERITS
> B{method#93 INT_CONST 6
> (num:#93 IN
> t):A{(#94 LET
> x:#94 IN
> t#94 IN
> {x<-~num;(#97 NEW
> A).set_var(x);})};method#102 INT_CONST 5
> (num:#102 IN
> t):E{(#103 LET
> x:#103 IN
> t#103 IN
> {x<-num*num*num;(#106 NEW
> E).set_var(x);})};};#113 CLASS
> D#113 INHERITS
> B{method#115 INT_CONST 7
> (num:#115 IN
> t):Bool{(#116 LET
> x:#116 IN
> t<-num#116 IN
407,409c93
< OBJECTID x
< '<'
< INT_CONST 0
---
> x<#117 INT_CONST 0
411,416c95,96
< OBJECTID method7
< '('
< '~'
< OBJECTID x
< ')'
< ELSE
---
> method#117 INT_CONST 7
> (~x)#117 ELSE
419,421c99
< '='
< OBJECTID x
< THEN
---
> =x#118 THEN
426,428c104
< '='
< OBJECTID x
< THEN
---
> =x#119 THEN
433,435c109
< '='
< OBJECTID x
< THEN
---
> =x#120 THEN
438,443c112,114
< OBJECTID method7
< '('
< OBJECTID x
< '-'
< INT_CONST 3
< ')'
---
> method#121 INT_CONST 7
> (x-#121 INT_CONST 3
> )#122 FI
447,511c118,133
< FI
< ')'
< '}'
< ';'
< '}'
< ';'
< CLASS
< TYPEID E
< INHERITS
< TYPEID D
< '{'
< OBJECTID method6
< '('
< OBJECTID num
< ':'
< TYPEID Int
< ')'
< ':'
< TYPEID A
< '{'
< '('
< LET
< OBJECTID x
< ':'
< TYPEID Int
< IN
< '{'
< OBJECTID x
< ASSIGN
< OBJECTID num
< '/'
< INT_CONST 8
< ';'
< '('
< NEW
< TYPEID A
< ')'
< '.'
< OBJECTID set_var
< '('
< OBJECTID x
< ')'
< ';'
< '}'
< ')'
< '}'
< ';'
< '}'
< ';'
< CLASS
< TYPEID A2I
< '{'
< OBJECTID c2i
< '('
< OBJECTID char
< ':'
< TYPEID String
< ')'
< ':'
< TYPEID Int
< '{'
< IF
< OBJECTID char
< '='
< STR_CONST "0"
---
> )};};#128 CLASS
> E#128 INHERITS
> D{method#130 INT_CONST 6
> (num:#130 IN
> t):A{(#131 LET
> x:#131 IN
> t#131 IN
> {x<-num/#133 INT_CONST 8
> ;(#134 NEW
> A).set_var(x);})};};))#155 CLASS
> A#155 INT_CONST 2
> I{c#157 INT_CONST 2
> i(char:Str#157 IN
> g):#157 IN
> t{#158 IF
> char=#158 STR_CONST "0"
516,518c138
< OBJECTID char
< '='
< STR_CONST "1"
---
> char=#159 STR_CONST "1"
523,525c143
< OBJECTID char
< '='
< STR_CONST "2"
---
> char=#160 STR_CONST "2"
530,532c148
< OBJECTID char
< '='
< STR_CONST "3"
---
> char=#161 STR_CONST "3"
537,539c153
< OBJECTID char
< '='
< STR_CONST "4"
---
> char=#162 STR_CONST "4"
544,546c158
< OBJECTID char
< '='
< STR_CONST "5"
---
> char=#163 STR_CONST "5"
551,553c163
< OBJECTID char
< '='
< STR_CONST "6"
---
> char=#164 STR_CONST "6"
558,560c168
< OBJECTID char
< '='
< STR_CONST "7"
---
> char=#165 STR_CONST "7"
565,567c173
< OBJECTID char
< '='
< STR_CONST "8"
---
> char=#166 STR_CONST "8"
572,574c178
< OBJECTID char
< '='
< STR_CONST "9"
---
> char=#167 STR_CONST "9"
578,586c182,183
< '{'
< OBJECTID abort
< '('
< ')'
< ';'
< INT_CONST 0
< ';'
< '}'
< FI
---
> {abort();#168 INT_CONST 0
> ;}#170 FI
596,610c193,197
< '}'
< ';'
< OBJECTID i2c
< '('
< OBJECTID i
< ':'
< TYPEID Int
< ')'
< ':'
< TYPEID String
< '{'
< IF
< OBJECTID i
< '='
< INT_CONST 0
---
> };i#176 INT_CONST 2
> c(i:#176 IN
> t):Str#176 IN
> g{#177 IF
> i=#177 INT_CONST 0
615,617c202
< OBJECTID i
< '='
< INT_CONST 1
---
> i=#178 INT_CONST 1
622,624c207
< OBJECTID i
< '='
< INT_CONST 2
---
> i=#179 INT_CONST 2
629,631c212
< OBJECTID i
< '='
< INT_CONST 3
---
> i=#180 INT_CONST 3
636,638c217
< OBJECTID i
< '='
< INT_CONST 4
---
> i=#181 INT_CONST 4
643,645c222
< OBJECTID i
< '='
< INT_CONST 5
---
> i=#182 INT_CONST 5
650,652c227
< OBJECTID i
< '='
< INT_CONST 6
---
> i=#183 INT_CONST 6
657,659c232
< OBJECTID i
< '='
< INT_CONST 7
---
> i=#184 INT_CONST 7
664,666c237
< OBJECTID i
< '='
< INT_CONST 8
---
> i=#185 INT_CONST 8
671,673c242
< OBJECTID i
< '='
< INT_CONST 9
---
> i=#186 INT_CONST 9
677,685c246,247
< '{'
< OBJECTID abort
< '('
< ')'
< ';'
< STR_CONST ""
< ';'
< '}'
< FI
---
> {abort();#187 STR_CONST ""
> ;}#188 FI
695,713c257,261
< '}'
< ';'
< OBJECTID a2i
< '('
< OBJECTID s
< ':'
< TYPEID String
< ')'
< ':'
< TYPEID Int
< '{'
< IF
< OBJECTID s
< '.'
< OBJECTID length
< '('
< ')'
< '='
< INT_CONST 0
---
> };a#199 INT_CONST 2
> i(s:Str#199 IN
> g):#199 IN
> t{#200 IF
> s.length()=#200 INT_CONST 0
718,727c266,268
< OBJECTID s
< '.'
< OBJECTID substr
< '('
< INT_CONST 0
< ','
< INT_CONST 1
< ')'
< '='
< STR_CONST "-"
---
> s.substr(#201 INT_CONST 0
> ,#201 INT_CONST 1
> )=#201 STR_CONST "-"
729,747c270,273
< '~'
< OBJECTID a2i_aux
< '('
< OBJECTID s
< '.'
< OBJECTID substr
< '('
< INT_CONST 1
< ','
< OBJECTID s
< '.'
< OBJECTID length
< '('
< ')'
< '-'
< INT_CONST 1
< ')'
< ')'
< ELSE
---
> ~a#201 INT_CONST 2
> i_aux(s.substr(#201 INT_CONST 1
> ,s.length()-#201 INT_CONST 1
> ))#201 ELSE
749,782c275,284
< OBJECTID s
< '.'
< OBJECTID substr
< '('
< INT_CONST 0
< ','
< INT_CONST 1
< ')'
< '='
< STR_CONST "+"
< THEN
< OBJECTID a2i_aux
< '('
< OBJECTID s
< '.'
< OBJECTID substr
< '('
< INT_CONST 1
< ','
< OBJECTID s
< '.'
< OBJECTID length
< '('
< ')'
< '-'
< INT_CONST 1
< ')'
< ')'
< ELSE
< OBJECTID a2i_aux
< '('
< OBJECTID s
< ')'
< FI
---
> s.substr(#202 INT_CONST 0
> ,#202 INT_CONST 1
> )=#202 STR_CONST "+"
> THEN
> a#202 INT_CONST 2
> i_aux(s.substr(#202 INT_CONST 1
> ,s.length()-#202 INT_CONST 1
> ))#202 ELSE
> a#203 INT_CONST 2
> i_aux(s)#204 FI
785,802c287,290
< '}'
< ';'
< OBJECTID a2i_aux
< '('
< OBJECTID s
< ':'
< TYPEID String
< ')'
< ':'
< TYPEID Int
< '{'
< '('
< LET
< OBJECTID int
< ':'
< TYPEID Int
< ASSIGN
< INT_CONST 0
---
> };a#211 INT_CONST 2
> i_aux(s:Str#211 IN
> g):#211 IN
> t{(#212 LET
804,815c292,293
< '{'
< '('
< LET
< OBJECTID j
< ':'
< TYPEID Int
< ASSIGN
< OBJECTID s
< '.'
< OBJECTID length
< '('
< ')'
---
> t:#212 IN
> t<-#212 INT_CONST 0
817,823c295,300
< '('
< LET
< OBJECTID i
< ':'
< TYPEID Int
< ASSIGN
< INT_CONST 0
---
> {(#214 LET
> j:#214 IN
> t<-s.length()#214 IN
> (#215 LET
> i:#215 IN
> t<-#215 INT_CONST 0
826,878c303,316
< OBJECTID i
< '<'
< OBJECTID j
< LOOP
< '{'
< OBJECTID int
< ASSIGN
< OBJECTID int
< '*'
< INT_CONST 10
< '+'
< OBJECTID c2i
< '('
< OBJECTID s
< '.'
< OBJECTID substr
< '('
< OBJECTID i
< ','
< INT_CONST 1
< ')'
< ')'
< ';'
< OBJECTID i
< ASSIGN
< OBJECTID i
< '+'
< INT_CONST 1
< ';'
< '}'
< POOL
< ')'
< ')'
< ';'
< OBJECTID int
< ';'
< '}'
< ')'
< '}'
< ';'
< OBJECTID i2a
< '('
< OBJECTID i
< ':'
< TYPEID Int
< ')'
< ':'
< TYPEID String
< '{'
< IF
< OBJECTID i
< '='
< INT_CONST 0
---
> i<j#216 LOOP
> {#218 IN
> t<-#218 IN
> t*#218 INT_CONST 10
> +c#218 INT_CONST 2
> i(s.substr(i,#218 INT_CONST 1
> ));i<-i+#219 INT_CONST 1
> ;}#221 POOL
> ));#224 IN
> t;})};i#232 INT_CONST 2
> a(i:#232 IN
> t):Str#232 IN
> g{#233 IF
> i=#233 INT_CONST 0
884,891c322,324
< '<'
< OBJECTID i
< THEN
< OBJECTID i2a_aux
< '('
< OBJECTID i
< ')'
< ELSE
---
> <i#234 THEN
> i#234 INT_CONST 2
> a_aux(i)#234 ELSE
893,920c326,334
< '.'
< OBJECTID concat
< '('
< OBJECTID i2a_aux
< '('
< OBJECTID i
< '*'
< '~'
< INT_CONST 1
< ')'
< ')'
< FI
< FI
< '}'
< ';'
< OBJECTID i2a_aux
< '('
< OBJECTID i
< ':'
< TYPEID Int
< ')'
< ':'
< TYPEID String
< '{'
< IF
< OBJECTID i
< '='
< INT_CONST 0
---
> .concat(i#235 INT_CONST 2
> a_aux(i*~#235 INT_CONST 1
> ))#236 FI
> FI
> };i#241 INT_CONST 2
> a_aux(i:#241 IN
> t):Str#241 IN
> g{#242 IF
> i=#242 INT_CONST 0
924,957c338,347
< '('
< LET
< OBJECTID next
< ':'
< TYPEID Int
< ASSIGN
< OBJECTID i
< '/'
< INT_CONST 10
< IN
< OBJECTID i2a_aux
< '('
< OBJECTID next
< ')'
< '.'
< OBJECTID concat
< '('
< OBJECTID i2c
< '('
< OBJECTID i
< '-'
< OBJECTID next
< '*'
< INT_CONST 10
< ')'
< ')'
< ')'
< FI
< '}'
< ';'
< '}'
< ';'
< CLASS
< TYPEID Main
---
> (#243 LET
> next:#243 IN
> t<-i/#243 INT_CONST 10
> IN
> i#244 INT_CONST 2
> a_aux(next).concat(i#244 INT_CONST 2
> c(i-next*#244 INT_CONST 10
> )))#246 FI
> };};#251 CLASS
> Ma#251 IN
959,1201c349,419
< TYPEID IO
< '{'
< OBJECTID char
< ':'
< TYPEID String
< ';'
< OBJECTID avar
< ':'
< TYPEID A
< ';'
< OBJECTID a_var
< ':'
< TYPEID A
< ';'
< OBJECTID flag
< ':'
< TYPEID Bool
< ASSIGN
< BOOL_CONST true
< ';'
< OBJECTID menu
< '('
< ')'
< ':'
< TYPEID String
< '{'
< '{'
< OBJECTID out_string
< '('
< STR_CONST "\n\tTo add a number to "
< ')'
< ';'
< OBJECTID print
< '('
< OBJECTID avar
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "...enter a:\n"
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "\tTo negate "
< ')'
< ';'
< OBJECTID print
< '('
< OBJECTID avar
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "...enter b:\n"
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "\tTo find the difference between "
< ')'
< ';'
< OBJECTID print
< '('
< OBJECTID avar
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "and another number...enter c:\n"
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "\tTo find the factorial of "
< ')'
< ';'
< OBJECTID print
< '('
< OBJECTID avar
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "...enter d:\n"
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "\tTo square "
< ')'
< ';'
< OBJECTID print
< '('
< OBJECTID avar
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "...enter e:\n"
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "\tTo cube "
< ')'
< ';'
< OBJECTID print
< '('
< OBJECTID avar
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "...enter f:\n"
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "\tTo find out if "
< ')'
< ';'
< OBJECTID print
< '('
< OBJECTID avar
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "is a multiple of 3...enter g:\n"
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "\tTo divide "
< ')'
< ';'
< OBJECTID print
< '('
< OBJECTID avar
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "by 8...enter h:\n"
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "\tTo get a new number...enter j:\n"
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "\tTo quit...enter q:\n\n"
< ')'
< ';'
< OBJECTID in_string
< '('
< ')'
< ';'
< '}'
< '}'
< ';'
< OBJECTID prompt
< '('
< ')'
< ':'
< TYPEID String
< '{'
< '{'
< OBJECTID out_string
< '('
< STR_CONST "\n"
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "Please enter a number...  "
< ')'
< ';'
< OBJECTID in_string
< '('
< ')'
< ';'
< '}'
< '}'
< ';'
< OBJECTID get_int
< '('
< ')'
< ':'
< TYPEID Int
< '{'
< '{'
< '('
< LET
< OBJECTID z
< ':'
< TYPEID A2I
< ASSIGN
< NEW
< TYPEID A2I
< IN
< '('
< LET
< OBJECTID s
< ':'
< TYPEID String
< ASSIGN
< OBJECTID prompt
< '('
< ')'
< IN
< OBJECTID z
< '.'
< OBJECTID a2i
< '('
< OBJECTID s
< ')'
< ')'
< ')'
< ';'
< '}'
< '}'
< ';'
< OBJECTID is_even
< '('
< OBJECTID num
< ':'
< TYPEID Int
< ')'
< ':'
< TYPEID Bool
< '{'
< '('
< LET
< OBJECTID x
< ':'
< TYPEID Int
< ASSIGN
< OBJECTID num
< IN
---
> IO{char:Str#253 IN
> g;avar:A;a_var:A;flag:Bool<-#256 BOOL_CONST true
> ;menu():Str#259 IN
> g{{out_str#261 IN
> g(#261 STR_CONST "\\n\\tTo add a number to "
> );pr#262 IN
> t(avar);out_str#263 IN
> g(#263 STR_CONST "...enter a:\\n"
> );out_str#264 IN
> g(#264 STR_CONST "\\tTo negate "
> );pr#265 IN
> t(avar);out_str#266 IN
> g(#266 STR_CONST "...enter b:\\n"
> );out_str#267 IN
> g(#267 STR_CONST "\\tTo find the difference between "
> );pr#268 IN
> t(avar);out_str#269 IN
> g(#269 STR_CONST "and another number...enter c:\\n"
> );out_str#270 IN
> g(#270 STR_CONST "\\tTo find the factorial of "
> );pr#271 IN
> t(avar);out_str#272 IN
> g(#272 STR_CONST "...enter d:\\n"
> );out_str#273 IN
> g(#273 STR_CONST "\\tTo square "
> );pr#274 IN
> t(avar);out_str#275 IN
> g(#275 STR_CONST "...enter e:\\n"
> );out_str#276 IN
> g(#276 STR_CONST "\\tTo cube "
> );pr#277 IN
> t(avar);out_str#278 IN
> g(#278 STR_CONST "...enter f:\\n"
> );out_str#279 IN
> g(#279 STR_CONST "\\tTo find out if "
> );pr#280 IN
> t(avar);out_str#281 IN
> g(#281 STR_CONST "is a multiple of 3...enter g:\\n"
> );out_str#282 IN
> g(#282 STR_CONST "\\tTo divide "
> );pr#283 IN
> t(avar);out_str#284 IN
> g(#284 STR_CONST "by 8...enter h:\\n"
> );out_str#285 IN
> g(#285 STR_CONST "\\tTo get a new number...enter j:\\n"
> );out_str#286 IN
> g(#286 STR_CONST "\\tTo quit...enter q:\\n\\n"
> );#287 IN
> _str#287 IN
> g();}};prompt():Str#291 IN
> g{{out_str#293 IN
> g(#293 STR_CONST "\\n"
> );out_str#294 IN
> g(#294 STR_CONST "Please enter a number...  "
> );#295 IN
> _str#295 IN
> g();}};get_#299 IN
> t():#299 IN
> t{{(#301 LET
> z:A#301 INT_CONST 2
> I<-#301 NEW
> A#301 INT_CONST 2
> I#301 IN
> (#302 LET
> s:Str#302 IN
> g<-prompt()#302 IN
> z.a#303 INT_CONST 2
> i(s)));}};is_even(num:#309 IN
> t):Bool{(#310 LET
> x:#310 IN
> t<-num#310 IN
1203,1205c421
< OBJECTID x
< '<'
< INT_CONST 0
---
> x<#311 INT_CONST 0
1207,1212c423
< OBJECTID is_even
< '('
< '~'
< OBJECTID x
< ')'
< ELSE
---
> is_even(~x)#311 ELSE
1215,1217c426
< '='
< OBJECTID x
< THEN
---
> =x#312 THEN
1222,1224c431
< '='
< OBJECTID x
< THEN
---
> =x#313 THEN
1227,1233c434,435
< OBJECTID is_even
< '('
< OBJECTID x
< '-'
< INT_CONST 2
< ')'
< FI
---
> is_even(x-#314 INT_CONST 2
> )#315 FI
1236,1457c438,495
< ')'
< '}'
< ';'
< OBJECTID class_type
< '('
< OBJECTID var
< ':'
< TYPEID A
< ')'
< ':'
< TYPEID SELF_TYPE
< '{'
< CASE
< OBJECTID var
< OF
< OBJECTID a
< ':'
< TYPEID A
< DARROW
< OBJECTID out_string
< '('
< STR_CONST "Class type is now A\n"
< ')'
< ';'
< OBJECTID b
< ':'
< TYPEID B
< DARROW
< OBJECTID out_string
< '('
< STR_CONST "Class type is now B\n"
< ')'
< ';'
< OBJECTID c
< ':'
< TYPEID C
< DARROW
< OBJECTID out_string
< '('
< STR_CONST "Class type is now C\n"
< ')'
< ';'
< OBJECTID d
< ':'
< TYPEID D
< DARROW
< OBJECTID out_string
< '('
< STR_CONST "Class type is now D\n"
< ')'
< ';'
< OBJECTID e
< ':'
< TYPEID E
< DARROW
< OBJECTID out_string
< '('
< STR_CONST "Class type is now E\n"
< ')'
< ';'
< OBJECTID o
< ':'
< TYPEID Object
< DARROW
< OBJECTID out_string
< '('
< STR_CONST "Oooops\n"
< ')'
< ';'
< ESAC
< '}'
< ';'
< OBJECTID print
< '('
< OBJECTID var
< ':'
< TYPEID A
< ')'
< ':'
< TYPEID SELF_TYPE
< '{'
< '('
< LET
< OBJECTID z
< ':'
< TYPEID A2I
< ASSIGN
< NEW
< TYPEID A2I
< IN
< '{'
< OBJECTID out_string
< '('
< OBJECTID z
< '.'
< OBJECTID i2a
< '('
< OBJECTID var
< '.'
< OBJECTID value
< '('
< ')'
< ')'
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST " "
< ')'
< ';'
< '}'
< ')'
< '}'
< ';'
< OBJECTID main
< '('
< ')'
< ':'
< TYPEID Object
< '{'
< '{'
< OBJECTID avar
< ASSIGN
< '('
< NEW
< TYPEID A
< ')'
< ';'
< WHILE
< OBJECTID flag
< LOOP
< '{'
< OBJECTID out_string
< '('
< STR_CONST "number "
< ')'
< ';'
< OBJECTID print
< '('
< OBJECTID avar
< ')'
< ';'
< IF
< OBJECTID is_even
< '('
< OBJECTID avar
< '.'
< OBJECTID value
< '('
< ')'
< ')'
< THEN
< OBJECTID out_string
< '('
< STR_CONST "is even!\n"
< ')'
< ELSE
< OBJECTID out_string
< '('
< STR_CONST "is odd!\n"
< ')'
< FI
< ';'
< OBJECTID class_type
< '('
< OBJECTID avar
< ')'
< ';'
< OBJECTID char
< ASSIGN
< OBJECTID menu
< '('
< ')'
< ';'
< IF
< OBJECTID char
< '='
< STR_CONST "a"
< THEN
< '{'
< OBJECTID a_var
< ASSIGN
< '('
< NEW
< TYPEID A
< ')'
< '.'
< OBJECTID set_var
< '('
< OBJECTID get_int
< '('
< ')'
< ')'
< ';'
< OBJECTID avar
< ASSIGN
< '('
< NEW
< TYPEID B
< ')'
< '.'
< OBJECTID method2
< '('
< OBJECTID avar
< '.'
< OBJECTID value
< '('
< ')'
< ','
< OBJECTID a_var
< '.'
< OBJECTID value
< '('
< ')'
< ')'
< ';'
< '}'
< ELSE
< IF
< OBJECTID char
< '='
< STR_CONST "b"
---
> )};#319 CLASS
> _type(var:A):{#320 CASE
> var#320 OF
> a:A#321 DARROW
> out_str#321 IN
> g(#321 STR_CONST "Class type is now A\\n"
> );b:B#322 DARROW
> out_str#322 IN
> g(#322 STR_CONST "Class type is now B\\n"
> );c:C#323 DARROW
> out_str#323 IN
> g(#323 STR_CONST "Class type is now C\\n"
> );d:D#324 DARROW
> out_str#324 IN
> g(#324 STR_CONST "Class type is now D\\n"
> );e:E#325 DARROW
> out_str#325 IN
> g(#325 STR_CONST "Class type is now E\\n"
> );o:Object#326 DARROW
> out_str#326 IN
> g(#326 STR_CONST "Oooops\\n"
> );#327 ESAC
> };pr#330 IN
> t(var:A):{(#331 LET
> z:A#331 INT_CONST 2
> I<-#331 NEW
> A#331 INT_CONST 2
> I#331 IN
> {out_str#333 IN
> g(z.i#333 INT_CONST 2
> a(var.value()));out_str#334 IN
> g(#334 STR_CONST " "
> );})};ma#339 IN
> ():Object{{avar<-(#341 NEW
> A);#342 WHILE
> flag#342 LOOP
> {out_str#345 IN
> g(#345 STR_CONST "number "
> );pr#346 IN
> t(avar);#347 IF
> is_even(avar.value())#347 THEN
> out_str#348 IN
> g(#348 STR_CONST "is even!\\n"
> )#349 ELSE
> out_str#350 IN
> g(#350 STR_CONST "is odd!\\n"
> )#351 FI
> ;#353 CLASS
> _type(avar);char<-menu();#355 IF
> char=#355 STR_CONST "a"
> THEN
> {a_var<-(#357 NEW
> A).set_var(get_#357 IN
> t());avar<-(#358 NEW
> B).method#358 INT_CONST 2
> (avar.value(),a_var.value());}#359 ELSE
> IF
> char=#360 STR_CONST "b"
1460,1819c498,510
< OBJECTID avar
< OF
< OBJECTID c
< ':'
< TYPEID C
< DARROW
< OBJECTID avar
< ASSIGN
< OBJECTID c
< '.'
< OBJECTID method6
< '('
< OBJECTID c
< '.'
< OBJECTID value
< '('
< ')'
< ')'
< ';'
< OBJECTID a
< ':'
< TYPEID A
< DARROW
< OBJECTID avar
< ASSIGN
< OBJECTID a
< '.'
< OBJECTID method3
< '('
< OBJECTID a
< '.'
< OBJECTID value
< '('
< ')'
< ')'
< ';'
< OBJECTID o
< ':'
< TYPEID Object
< DARROW
< '{'
< OBJECTID out_string
< '('
< STR_CONST "Oooops\n"
< ')'
< ';'
< OBJECTID abort
< '('
< ')'
< ';'
< INT_CONST 0
< ';'
< '}'
< ';'
< ESAC
< ELSE
< IF
< OBJECTID char
< '='
< STR_CONST "c"
< THEN
< '{'
< OBJECTID a_var
< ASSIGN
< '('
< NEW
< TYPEID A
< ')'
< '.'
< OBJECTID set_var
< '('
< OBJECTID get_int
< '('
< ')'
< ')'
< ';'
< OBJECTID avar
< ASSIGN
< '('
< NEW
< TYPEID D
< ')'
< '.'
< OBJECTID method4
< '('
< OBJECTID avar
< '.'
< OBJECTID value
< '('
< ')'
< ','
< OBJECTID a_var
< '.'
< OBJECTID value
< '('
< ')'
< ')'
< ';'
< '}'
< ELSE
< IF
< OBJECTID char
< '='
< STR_CONST "d"
< THEN
< OBJECTID avar
< ASSIGN
< '('
< NEW
< TYPEID C
< ')'
< '@'
< TYPEID A
< '.'
< OBJECTID method5
< '('
< OBJECTID avar
< '.'
< OBJECTID value
< '('
< ')'
< ')'
< ELSE
< IF
< OBJECTID char
< '='
< STR_CONST "e"
< THEN
< OBJECTID avar
< ASSIGN
< '('
< NEW
< TYPEID C
< ')'
< '@'
< TYPEID B
< '.'
< OBJECTID method5
< '('
< OBJECTID avar
< '.'
< OBJECTID value
< '('
< ')'
< ')'
< ELSE
< IF
< OBJECTID char
< '='
< STR_CONST "f"
< THEN
< OBJECTID avar
< ASSIGN
< '('
< NEW
< TYPEID C
< ')'
< '@'
< TYPEID C
< '.'
< OBJECTID method5
< '('
< OBJECTID avar
< '.'
< OBJECTID value
< '('
< ')'
< ')'
< ELSE
< IF
< OBJECTID char
< '='
< STR_CONST "g"
< THEN
< IF
< '('
< '('
< NEW
< TYPEID D
< ')'
< '.'
< OBJECTID method7
< '('
< OBJECTID avar
< '.'
< OBJECTID value
< '('
< ')'
< ')'
< ')'
< THEN
< '{'
< OBJECTID out_string
< '('
< STR_CONST "number "
< ')'
< ';'
< OBJECTID print
< '('
< OBJECTID avar
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "is divisible by 3.\n"
< ')'
< ';'
< '}'
< ELSE
< '{'
< OBJECTID out_string
< '('
< STR_CONST "number "
< ')'
< ';'
< OBJECTID print
< '('
< OBJECTID avar
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "is not divisible by 3.\n"
< ')'
< ';'
< '}'
< FI
< ELSE
< IF
< OBJECTID char
< '='
< STR_CONST "h"
< THEN
< '('
< LET
< OBJECTID x
< ':'
< TYPEID A
< IN
< '{'
< OBJECTID x
< ASSIGN
< '('
< NEW
< TYPEID E
< ')'
< '.'
< OBJECTID method6
< '('
< OBJECTID avar
< '.'
< OBJECTID value
< '('
< ')'
< ')'
< ';'
< '('
< LET
< OBJECTID r
< ':'
< TYPEID Int
< ASSIGN
< '('
< OBJECTID avar
< '.'
< OBJECTID value
< '('
< ')'
< '-'
< '('
< OBJECTID x
< '.'
< OBJECTID value
< '('
< ')'
< '*'
< INT_CONST 8
< ')'
< ')'
< IN
< '{'
< OBJECTID out_string
< '('
< STR_CONST "number "
< ')'
< ';'
< OBJECTID print
< '('
< OBJECTID avar
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "is equal to "
< ')'
< ';'
< OBJECTID print
< '('
< OBJECTID x
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "times 8 with a remainder of "
< ')'
< ';'
< '('
< LET
< OBJECTID a
< ':'
< TYPEID A2I
< ASSIGN
< NEW
< TYPEID A2I
< IN
< '{'
< OBJECTID out_string
< '('
< OBJECTID a
< '.'
< OBJECTID i2a
< '('
< OBJECTID r
< ')'
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "\n"
< ')'
< ';'
< '}'
< ')'
< ';'
< '}'
< ')'
< ';'
< OBJECTID avar
< ASSIGN
< OBJECTID x
< ';'
< '}'
< ')'
< ELSE
< IF
< OBJECTID char
< '='
< STR_CONST "j"
< THEN
< OBJECTID avar
< ASSIGN
< '('
< NEW
< TYPEID A
< ')'
< ELSE
< IF
< OBJECTID char
< '='
< STR_CONST "q"
---
> avar#361 OF
> c:C#362 DARROW
> avar<-c.method#362 INT_CONST 6
> (c.value());a:A#363 DARROW
> avar<-a.method#363 INT_CONST 3
> (a.value());o:Object#364 DARROW
> {out_str#365 IN
> g(#365 STR_CONST "Oooops\\n"
> );abort();#366 INT_CONST 0
> ;};#368 ESAC
> ELSE
> IF
> char=#369 STR_CONST "c"
1821,1823c512,553
< OBJECTID flag
< ASSIGN
< BOOL_CONST false
---
> {a_var<-(#371 NEW
> A).set_var(get_#371 IN
> t());avar<-(#372 NEW
> D).method#372 INT_CONST 4
> (avar.value(),a_var.value());}#373 ELSE
> IF
> char=#374 STR_CONST "d"
> THEN
> avar<-(#374 NEW
> C)@A.method#374 INT_CONST 5
> (avar.value())#374 ELSE
> IF
> char=#376 STR_CONST "e"
> THEN
> avar<-(#376 NEW
> C)@B.method#376 INT_CONST 5
> (avar.value())#376 ELSE
> IF
> char=#378 STR_CONST "f"
> THEN
> avar<-(#378 NEW
> C)@C.method#378 INT_CONST 5
> (avar.value())#378 ELSE
> IF
> char=#380 STR_CONST "g"
> THEN
> IF
> ((#381 NEW
> D).method#381 INT_CONST 7
> (avar.value()))#382 THEN
> {out_str#384 IN
> g(#384 STR_CONST "number "
> );pr#385 IN
> t(avar);out_str#386 IN
> g(#386 STR_CONST "is divisible by 3.\\n"
> );}#388 ELSE
> {out_str#390 IN
> g(#390 STR_CONST "number "
> );pr#391 IN
> t(avar);out_str#392 IN
> g(#392 STR_CONST "is not divisible by 3.\\n"
> );}#394 FI
1825,1840c555,596
< OBJECTID avar
< ASSIGN
< '('
< NEW
< TYPEID A
< ')'
< '.'
< OBJECTID method1
< '('
< OBJECTID avar
< '.'
< OBJECTID value
< '('
< ')'
< ')'
< FI
---
> IF
> char=#395 STR_CONST "h"
> THEN
> (#396 LET
> x:A#396 IN
> {x<-(#398 NEW
> E).method#398 INT_CONST 6
> (avar.value());(#399 LET
> r:#399 IN
> t<-(avar.value()-(x.value()*#399 INT_CONST 8
> ))#399 IN
> {out_str#401 IN
> g(#401 STR_CONST "number "
> );pr#402 IN
> t(avar);out_str#403 IN
> g(#403 STR_CONST "is equal to "
> );pr#404 IN
> t(x);out_str#405 IN
> g(#405 STR_CONST "times 8 with a remainder of "
> );(#406 LET
> a:A#406 INT_CONST 2
> I<-#406 NEW
> A#406 INT_CONST 2
> I#406 IN
> {out_str#408 IN
> g(a.i#408 INT_CONST 2
> a(r));out_str#409 IN
> g(#409 STR_CONST "\\n"
> );});});avar<-x;})#417 ELSE
> IF
> char=#418 STR_CONST "j"
> THEN
> avar<-(#418 NEW
> A)#419 ELSE
> IF
> char=#420 STR_CONST "q"
> THEN
> flag<-#420 BOOL_CONST false
> ELSE
> avar<-(#422 NEW
> A).method#422 INT_CONST 1
> (avar.value())#423 FI
1850,1858c606,607
< ';'
< '}'
< POOL
< ';'
< '}'
< '}'
< ';'
< '}'
< ';'
---
> ;}#425 POOL
> ;}};};
\ No newline at end of file
