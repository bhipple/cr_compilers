1,54c1,22
< CLASS
< TYPEID Board
< INHERITS
< TYPEID IO
< '{'
< OBJECTID rows
< ':'
< TYPEID Int
< ';'
< OBJECTID columns
< ':'
< TYPEID Int
< ';'
< OBJECTID board_size
< ':'
< TYPEID Int
< ';'
< OBJECTID size_of_board
< '('
< OBJECTID initial
< ':'
< TYPEID String
< ')'
< ':'
< TYPEID Int
< '{'
< OBJECTID initial
< '.'
< OBJECTID length
< '('
< ')'
< '}'
< ';'
< OBJECTID board_init
< '('
< OBJECTID start
< ':'
< TYPEID String
< ')'
< ':'
< TYPEID SELF_TYPE
< '{'
< '('
< LET
< OBJECTID size
< ':'
< TYPEID Int
< ASSIGN
< OBJECTID size_of_board
< '('
< OBJECTID start
< ')'
< IN
< '{'
---
> ))))))#45 CLASS
> Board#45 INHERITS
> IO{rows:#47 IN
> t;columns:#48 IN
> t;board_size:#49 IN
> t;size_#51 OF
> _board(#51 IN
> itial:Str#51 IN
> g):#51 IN
> t{#52 IN
> itial.length()};board_#55 IN
> it(start:Str#55 IN
> g):{(#56 LET
> size:#56 IN
> t<-size_#56 OF
> _board(start)#56 IN
> {#58 IF
> size=#58 INT_CONST 15
> THEN
> {rows<-#60 INT_CONST 3
> ;columns<-#61 INT_CONST 5
> ;board_size<-size;}#64 ELSE
56,189c24,55
< OBJECTID size
< '='
< INT_CONST 15
< THEN
< '{'
< OBJECTID rows
< ASSIGN
< INT_CONST 3
< ';'
< OBJECTID columns
< ASSIGN
< INT_CONST 5
< ';'
< OBJECTID board_size
< ASSIGN
< OBJECTID size
< ';'
< '}'
< ELSE
< IF
< OBJECTID size
< '='
< INT_CONST 16
< THEN
< '{'
< OBJECTID rows
< ASSIGN
< INT_CONST 4
< ';'
< OBJECTID columns
< ASSIGN
< INT_CONST 4
< ';'
< OBJECTID board_size
< ASSIGN
< OBJECTID size
< ';'
< '}'
< ELSE
< IF
< OBJECTID size
< '='
< INT_CONST 20
< THEN
< '{'
< OBJECTID rows
< ASSIGN
< INT_CONST 4
< ';'
< OBJECTID columns
< ASSIGN
< INT_CONST 5
< ';'
< OBJECTID board_size
< ASSIGN
< OBJECTID size
< ';'
< '}'
< ELSE
< IF
< OBJECTID size
< '='
< INT_CONST 21
< THEN
< '{'
< OBJECTID rows
< ASSIGN
< INT_CONST 3
< ';'
< OBJECTID columns
< ASSIGN
< INT_CONST 7
< ';'
< OBJECTID board_size
< ASSIGN
< OBJECTID size
< ';'
< '}'
< ELSE
< IF
< OBJECTID size
< '='
< INT_CONST 25
< THEN
< '{'
< OBJECTID rows
< ASSIGN
< INT_CONST 5
< ';'
< OBJECTID columns
< ASSIGN
< INT_CONST 5
< ';'
< OBJECTID board_size
< ASSIGN
< OBJECTID size
< ';'
< '}'
< ELSE
< IF
< OBJECTID size
< '='
< INT_CONST 28
< THEN
< '{'
< OBJECTID rows
< ASSIGN
< INT_CONST 7
< ';'
< OBJECTID columns
< ASSIGN
< INT_CONST 4
< ';'
< OBJECTID board_size
< ASSIGN
< OBJECTID size
< ';'
< '}'
< ELSE
< '{'
< OBJECTID rows
< ASSIGN
< INT_CONST 5
< ';'
< OBJECTID columns
< ASSIGN
< INT_CONST 5
< ';'
< OBJECTID board_size
< ASSIGN
< OBJECTID size
< ';'
< '}'
< FI
---
> size=#64 INT_CONST 16
> THEN
> {rows<-#66 INT_CONST 4
> ;columns<-#67 INT_CONST 4
> ;board_size<-size;}#70 ELSE
> IF
> size=#70 INT_CONST 20
> THEN
> {rows<-#72 INT_CONST 4
> ;columns<-#73 INT_CONST 5
> ;board_size<-size;}#76 ELSE
> IF
> size=#76 INT_CONST 21
> THEN
> {rows<-#78 INT_CONST 3
> ;columns<-#79 INT_CONST 7
> ;board_size<-size;}#82 ELSE
> IF
> size=#82 INT_CONST 25
> THEN
> {rows<-#84 INT_CONST 5
> ;columns<-#85 INT_CONST 5
> ;board_size<-size;}#88 ELSE
> IF
> size=#88 INT_CONST 28
> THEN
> {rows<-#90 INT_CONST 7
> ;columns<-#91 INT_CONST 4
> ;board_size<-size;}#94 ELSE
> {rows<-#96 INT_CONST 5
> ;columns<-#97 INT_CONST 5
> ;board_size<-size;}#100 FI
195,257c61,70
< ';'
< OBJECTID self
< ';'
< '}'
< ')'
< '}'
< ';'
< '}'
< ';'
< CLASS
< TYPEID CellularAutomaton
< INHERITS
< TYPEID Board
< '{'
< OBJECTID population_map
< ':'
< TYPEID String
< ';'
< OBJECTID init
< '('
< OBJECTID map
< ':'
< TYPEID String
< ')'
< ':'
< TYPEID SELF_TYPE
< '{'
< '{'
< OBJECTID population_map
< ASSIGN
< OBJECTID map
< ';'
< OBJECTID board_init
< '('
< OBJECTID map
< ')'
< ';'
< OBJECTID self
< ';'
< '}'
< '}'
< ';'
< OBJECTID print
< '('
< ')'
< ':'
< TYPEID SELF_TYPE
< '{'
< '('
< LET
< OBJECTID i
< ':'
< TYPEID Int
< ASSIGN
< INT_CONST 0
< IN
< '('
< LET
< OBJECTID num
< ':'
< TYPEID Int
< ASSIGN
< OBJECTID board_size
---
> ;self;})};};#110 CLASS
> CellularAutomaton#110 INHERITS
> Board{population_map:Str#111 IN
> g;#113 IN
> it(map:Str#113 IN
> g):{{population_map<-map;board_#116 IN
> it(map);self;}};pr#124 IN
> t():{(#126 LET
> i:#126 IN
> t<-#126 INT_CONST 0
259,337c72,90
< '{'
< OBJECTID out_string
< '('
< STR_CONST "\n"
< ')'
< ';'
< WHILE
< OBJECTID i
< '<'
< OBJECTID num
< LOOP
< '{'
< OBJECTID out_string
< '('
< OBJECTID population_map
< '.'
< OBJECTID substr
< '('
< OBJECTID i
< ','
< OBJECTID columns
< ')'
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "\n"
< ')'
< ';'
< OBJECTID i
< ASSIGN
< OBJECTID i
< '+'
< OBJECTID columns
< ';'
< '}'
< POOL
< ';'
< OBJECTID out_string
< '('
< STR_CONST "\n"
< ')'
< ';'
< OBJECTID self
< ';'
< '}'
< ')'
< ')'
< '}'
< ';'
< OBJECTID num_cells
< '('
< ')'
< ':'
< TYPEID Int
< '{'
< OBJECTID population_map
< '.'
< OBJECTID length
< '('
< ')'
< '}'
< ';'
< OBJECTID cell
< '('
< OBJECTID position
< ':'
< TYPEID Int
< ')'
< ':'
< TYPEID String
< '{'
< IF
< OBJECTID board_size
< '-'
< INT_CONST 1
< '<'
< OBJECTID position
< THEN
---
> (#127 LET
> num:#127 IN
> t<-board_size#127 IN
> {out_str#129 IN
> g(#129 STR_CONST "\\n"
> );#130 WHILE
> i<num#130 LOOP
> {out_str#132 IN
> g(population_map.substr(i,columns));out_str#133 IN
> g(#133 STR_CONST "\\n"
> );i<-i+columns;}#136 POOL
> ;out_str#137 IN
> g(#137 STR_CONST "\\n"
> );self;}))};num_cells():#143 IN
> t{population_map.length()};cell(position:#147 IN
> t):Str#147 IN
> g{#148 IF
> board_size-#148 INT_CONST 1
> <position#148 THEN
340,367c93,98
< OBJECTID population_map
< '.'
< OBJECTID substr
< '('
< OBJECTID position
< ','
< INT_CONST 1
< ')'
< FI
< '}'
< ';'
< OBJECTID north
< '('
< OBJECTID position
< ':'
< TYPEID Int
< ')'
< ':'
< TYPEID String
< '{'
< IF
< '('
< OBJECTID position
< '-'
< OBJECTID columns
< ')'
< '<'
< INT_CONST 0
---
> population_map.substr(position,#151 INT_CONST 1
> )#152 FI
> };north(position:#155 IN
> t):Str#155 IN
> g{#156 IF
> (position-columns)<#156 INT_CONST 0
371,397c102,106
< OBJECTID cell
< '('
< OBJECTID position
< '-'
< OBJECTID columns
< ')'
< FI
< '}'
< ';'
< OBJECTID south
< '('
< OBJECTID position
< ':'
< TYPEID Int
< ')'
< ':'
< TYPEID String
< '{'
< IF
< OBJECTID board_size
< '<'
< '('
< OBJECTID position
< '+'
< OBJECTID columns
< ')'
< THEN
---
> cell(position-columns)#160 FI
> };south(position:#163 IN
> t):Str#163 IN
> g{#164 IF
> board_size<(position+columns)#164 THEN
400,438c109,115
< OBJECTID cell
< '('
< OBJECTID position
< '+'
< OBJECTID columns
< ')'
< FI
< '}'
< ';'
< OBJECTID east
< '('
< OBJECTID position
< ':'
< TYPEID Int
< ')'
< ':'
< TYPEID String
< '{'
< IF
< '('
< '('
< '('
< OBJECTID position
< '+'
< INT_CONST 1
< ')'
< '/'
< OBJECTID columns
< ')'
< '*'
< OBJECTID columns
< ')'
< '='
< '('
< OBJECTID position
< '+'
< INT_CONST 1
< ')'
< THEN
---
> cell(position+columns)#168 FI
> };east(position:#171 IN
> t):Str#171 IN
> g{#172 IF
> (((position+#172 INT_CONST 1
> )/columns)*columns)=(position+#172 INT_CONST 1
> )#172 THEN
441,462c118,123
< OBJECTID cell
< '('
< OBJECTID position
< '+'
< INT_CONST 1
< ')'
< FI
< '}'
< ';'
< OBJECTID west
< '('
< OBJECTID position
< ':'
< TYPEID Int
< ')'
< ':'
< TYPEID String
< '{'
< IF
< OBJECTID position
< '='
< INT_CONST 0
---
> cell(position+#175 INT_CONST 1
> )#176 FI
> };west(position:#179 IN
> t):Str#179 IN
> g{#180 IF
> position=#180 INT_CONST 0
467,478c128
< '('
< '('
< OBJECTID position
< '/'
< OBJECTID columns
< ')'
< '*'
< OBJECTID columns
< ')'
< '='
< OBJECTID position
< THEN
---
> ((position/columns)*columns)=position#183 THEN
481,486c131,132
< OBJECTID cell
< '('
< OBJECTID position
< '-'
< INT_CONST 1
< ')'
---
> cell(position-#186 INT_CONST 1
> )#187 FI
488,507c134,137
< FI
< '}'
< ';'
< OBJECTID northwest
< '('
< OBJECTID position
< ':'
< TYPEID Int
< ')'
< ':'
< TYPEID String
< '{'
< IF
< '('
< OBJECTID position
< '-'
< OBJECTID columns
< ')'
< '<'
< INT_CONST 0
---
> };northwest(position:#190 IN
> t):Str#190 IN
> g{#191 IF
> (position-columns)<#191 INT_CONST 0
512,523c142
< '('
< '('
< OBJECTID position
< '/'
< OBJECTID columns
< ')'
< '*'
< OBJECTID columns
< ')'
< '='
< OBJECTID position
< THEN
---
> ((position/columns)*columns)=position#193 THEN
526,532c145,146
< OBJECTID north
< '('
< OBJECTID position
< '-'
< INT_CONST 1
< ')'
< FI
---
> north(position-#196 INT_CONST 1
> )#197 FI
534,552c148,151
< '}'
< ';'
< OBJECTID northeast
< '('
< OBJECTID position
< ':'
< TYPEID Int
< ')'
< ':'
< TYPEID String
< '{'
< IF
< '('
< OBJECTID position
< '-'
< OBJECTID columns
< ')'
< '<'
< INT_CONST 0
---
> };northeast(position:#200 IN
> t):Str#200 IN
> g{#201 IF
> (position-columns)<#201 INT_CONST 0
557,576c156,158
< '('
< '('
< '('
< OBJECTID position
< '+'
< INT_CONST 1
< ')'
< '/'
< OBJECTID columns
< ')'
< '*'
< OBJECTID columns
< ')'
< '='
< '('
< OBJECTID position
< '+'
< INT_CONST 1
< ')'
< THEN
---
> (((position+#203 INT_CONST 1
> )/columns)*columns)=(position+#203 INT_CONST 1
> )#203 THEN
579,585c161,162
< OBJECTID north
< '('
< OBJECTID position
< '+'
< INT_CONST 1
< ')'
< FI
---
> north(position+#206 INT_CONST 1
> )#207 FI
587,606c164,167
< '}'
< ';'
< OBJECTID southeast
< '('
< OBJECTID position
< ':'
< TYPEID Int
< ')'
< ':'
< TYPEID String
< '{'
< IF
< OBJECTID board_size
< '<'
< '('
< OBJECTID position
< '+'
< OBJECTID columns
< ')'
< THEN
---
> };southeast(position:#210 IN
> t):Str#210 IN
> g{#211 IF
> board_size<(position+columns)#211 THEN
610,629c171,173
< '('
< '('
< '('
< OBJECTID position
< '+'
< INT_CONST 1
< ')'
< '/'
< OBJECTID columns
< ')'
< '*'
< OBJECTID columns
< ')'
< '='
< '('
< OBJECTID position
< '+'
< INT_CONST 1
< ')'
< THEN
---
> (((position+#213 INT_CONST 1
> )/columns)*columns)=(position+#213 INT_CONST 1
> )#213 THEN
632,638c176,177
< OBJECTID south
< '('
< OBJECTID position
< '+'
< INT_CONST 1
< ')'
< FI
---
> south(position+#216 INT_CONST 1
> )#217 FI
640,659c179,182
< '}'
< ';'
< OBJECTID southwest
< '('
< OBJECTID position
< ':'
< TYPEID Int
< ')'
< ':'
< TYPEID String
< '{'
< IF
< OBJECTID board_size
< '<'
< '('
< OBJECTID position
< '+'
< OBJECTID columns
< ')'
< THEN
---
> };southwest(position:#220 IN
> t):Str#220 IN
> g{#221 IF
> board_size<(position+columns)#221 THEN
663,674c186
< '('
< '('
< OBJECTID position
< '/'
< OBJECTID columns
< ')'
< '*'
< OBJECTID columns
< ')'
< '='
< OBJECTID position
< THEN
---
> ((position/columns)*columns)=position#223 THEN
677,682c189,190
< OBJECTID south
< '('
< OBJECTID position
< '-'
< INT_CONST 1
< ')'
---
> south(position-#226 INT_CONST 1
> )#227 FI
684,703c192,195
< FI
< '}'
< ';'
< OBJECTID neighbors
< '('
< OBJECTID position
< ':'
< TYPEID Int
< ')'
< ':'
< TYPEID Int
< '{'
< '{'
< IF
< OBJECTID north
< '('
< OBJECTID position
< ')'
< '='
< STR_CONST "X"
---
> };neighbors(position:#230 IN
> t):#230 IN
> t{{#232 IF
> north(position)=#232 STR_CONST "X"
709,716c201,202
< '+'
< IF
< OBJECTID south
< '('
< OBJECTID position
< ')'
< '='
< STR_CONST "X"
---
> +#233 IF
> south(position)=#233 STR_CONST "X"
722,729c208,209
< '+'
< IF
< OBJECTID east
< '('
< OBJECTID position
< ')'
< '='
< STR_CONST "X"
---
> +#234 IF
> east(position)=#234 STR_CONST "X"
735,742c215,216
< '+'
< IF
< OBJECTID west
< '('
< OBJECTID position
< ')'
< '='
< STR_CONST "X"
---
> +#235 IF
> west(position)=#235 STR_CONST "X"
748,755c222,223
< '+'
< IF
< OBJECTID northeast
< '('
< OBJECTID position
< ')'
< '='
< STR_CONST "X"
---
> +#236 IF
> northeast(position)=#236 STR_CONST "X"
761,768c229,230
< '+'
< IF
< OBJECTID northwest
< '('
< OBJECTID position
< ')'
< '='
< STR_CONST "X"
---
> +#237 IF
> northwest(position)=#237 STR_CONST "X"
774,781c236,237
< '+'
< IF
< OBJECTID southeast
< '('
< OBJECTID position
< ')'
< '='
< STR_CONST "X"
---
> +#238 IF
> southeast(position)=#238 STR_CONST "X"
787,794c243,244
< '+'
< IF
< OBJECTID southwest
< '('
< OBJECTID position
< ')'
< '='
< STR_CONST "X"
---
> +#239 IF
> southwest(position)=#239 STR_CONST "X"
800,819c250,253
< ';'
< '}'
< '}'
< ';'
< OBJECTID cell_at_next_evolution
< '('
< OBJECTID position
< ':'
< TYPEID Int
< ')'
< ':'
< TYPEID String
< '{'
< IF
< OBJECTID neighbors
< '('
< OBJECTID position
< ')'
< '='
< INT_CONST 3
---
> ;}};cell_at_next_evolution(position:#247 IN
> t):Str#247 IN
> g{#249 IF
> neighbors(position)=#249 INT_CONST 3
824,829c258
< OBJECTID neighbors
< '('
< OBJECTID position
< ')'
< '='
< INT_CONST 2
---
> neighbors(position)=#252 INT_CONST 2
832,837c261
< OBJECTID cell
< '('
< OBJECTID position
< ')'
< '='
< STR_CONST "X"
---
> cell(position)=#253 STR_CONST "X"
847,1062c271,340
< '}'
< ';'
< OBJECTID evolve
< '('
< ')'
< ':'
< TYPEID SELF_TYPE
< '{'
< '('
< LET
< OBJECTID position
< ':'
< TYPEID Int
< ASSIGN
< INT_CONST 0
< IN
< '('
< LET
< OBJECTID num
< ':'
< TYPEID Int
< ASSIGN
< OBJECTID num_cells
< '('
< ')'
< IN
< '('
< LET
< OBJECTID temp
< ':'
< TYPEID String
< IN
< '{'
< WHILE
< OBJECTID position
< '<'
< OBJECTID num
< LOOP
< '{'
< OBJECTID temp
< ASSIGN
< OBJECTID temp
< '.'
< OBJECTID concat
< '('
< OBJECTID cell_at_next_evolution
< '('
< OBJECTID position
< ')'
< ')'
< ';'
< OBJECTID position
< ASSIGN
< OBJECTID position
< '+'
< INT_CONST 1
< ';'
< '}'
< POOL
< ';'
< OBJECTID population_map
< ASSIGN
< OBJECTID temp
< ';'
< OBJECTID self
< ';'
< '}'
< ')'
< ')'
< ')'
< '}'
< ';'
< OBJECTID option
< '('
< ')'
< ':'
< TYPEID String
< '{'
< '{'
< '('
< LET
< OBJECTID num
< ':'
< TYPEID Int
< IN
< '{'
< OBJECTID out_string
< '('
< STR_CONST "\nPlease chose a number:\n"
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "\t1: A cross\n"
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "\t2: A slash from the upper left to lower right\n"
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "\t3: A slash from the upper right to lower left\n"
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "\t4: An X\n"
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "\t5: A greater than sign \n"
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "\t6: A less than sign\n"
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "\t7: Two greater than signs\n"
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "\t8: Two less than signs\n"
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "\t9: A 'V'\n"
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "\t10: An inverse 'V'\n"
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "\t11: Numbers 9 and 10 combined\n"
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "\t12: A full grid\n"
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "\t13: A 'T'\n"
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "\t14: A plus '+'\n"
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "\t15: A 'W'\n"
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "\t16: An 'M'\n"
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "\t17: An 'E'\n"
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "\t18: A '3'\n"
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "\t19: An 'O'\n"
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "\t20: An '8'\n"
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "\t21: An 'S'\n"
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "Your choice => "
< ')'
< ';'
< OBJECTID num
< ASSIGN
< OBJECTID in_int
< '('
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "\n"
< ')'
< ';'
< IF
< OBJECTID num
< '='
< INT_CONST 1
---
> };evolve():{(#265 LET
> position:#265 IN
> t<-#265 INT_CONST 0
> IN
> (#266 LET
> num:#266 IN
> t<-num_cells()#266 IN
> (#267 LET
> temp:Str#267 IN
> g#267 IN
> {#269 WHILE
> position<num#269 LOOP
> {temp<-temp.concat(cell_at_next_evolution(position));position<-position+#272 INT_CONST 1
> ;}#274 POOL
> ;population_map<-temp;self;})))};option():Str#284 IN
> g{{(#286 LET
> num:#286 IN
> t#286 IN
> {out_str#288 IN
> g(#288 STR_CONST "\\nPlease chose a number:\\n"
> );out_str#289 IN
> g(#289 STR_CONST "\\t1: A cross\\n"
> );out_str#290 IN
> g(#290 STR_CONST "\\t2: A slash from the upper left to lower right\\n"
> );out_str#291 IN
> g(#291 STR_CONST "\\t3: A slash from the upper right to lower left\\n"
> );out_str#292 IN
> g(#292 STR_CONST "\\t4: An X\\n"
> );out_str#293 IN
> g(#293 STR_CONST "\\t5: A greater than sign \\n"
> );out_str#294 IN
> g(#294 STR_CONST "\\t6: A less than sign\\n"
> );out_str#295 IN
> g(#295 STR_CONST "\\t7: Two greater than signs\\n"
> );out_str#296 IN
> g(#296 STR_CONST "\\t8: Two less than signs\\n"
> );out_str#297 IN
> g(#297 STR_CONST "\\t9: A 'V'\\n"
> );out_str#298 IN
> g(#298 STR_CONST "\\t10: An inverse 'V'\\n"
> );out_str#299 IN
> g(#299 STR_CONST "\\t11: Numbers 9 and 10 combined\\n"
> );out_str#300 IN
> g(#300 STR_CONST "\\t12: A full grid\\n"
> );out_str#301 IN
> g(#301 STR_CONST "\\t13: A 'T'\\n"
> );out_str#302 IN
> g(#302 STR_CONST "\\t14: A plus '+'\\n"
> );out_str#303 IN
> g(#303 STR_CONST "\\t15: A 'W'\\n"
> );out_str#304 IN
> g(#304 STR_CONST "\\t16: An 'M'\\n"
> );out_str#305 IN
> g(#305 STR_CONST "\\t17: An 'E'\\n"
> );out_str#306 IN
> g(#306 STR_CONST "\\t18: A '3'\\n"
> );out_str#307 IN
> g(#307 STR_CONST "\\t19: An 'O'\\n"
> );out_str#308 IN
> g(#308 STR_CONST "\\t20: An '8'\\n"
> );out_str#309 IN
> g(#309 STR_CONST "\\t21: An 'S'\\n"
> );out_str#310 IN
> g(#310 STR_CONST "Your choice => "
> );num<-#311 IN
> _#311 IN
> t();out_str#312 IN
> g(#312 STR_CONST "\\n"
> );#313 IF
> num=#313 INT_CONST 1
1067,1069c345
< OBJECTID num
< '='
< INT_CONST 2
---
> num=#315 INT_CONST 2
1074,1076c350
< OBJECTID num
< '='
< INT_CONST 3
---
> num=#317 INT_CONST 3
1081,1083c355
< OBJECTID num
< '='
< INT_CONST 4
---
> num=#319 INT_CONST 4
1088,1090c360
< OBJECTID num
< '='
< INT_CONST 5
---
> num=#321 INT_CONST 5
1095,1097c365
< OBJECTID num
< '='
< INT_CONST 6
---
> num=#323 INT_CONST 6
1102,1104c370
< OBJECTID num
< '='
< INT_CONST 7
---
> num=#325 INT_CONST 7
1109,1111c375
< OBJECTID num
< '='
< INT_CONST 8
---
> num=#327 INT_CONST 8
1116,1118c380
< OBJECTID num
< '='
< INT_CONST 9
---
> num=#329 INT_CONST 9
1123,1125c385
< OBJECTID num
< '='
< INT_CONST 10
---
> num=#331 INT_CONST 10
1130,1132c390
< OBJECTID num
< '='
< INT_CONST 11
---
> num=#333 INT_CONST 11
1137,1139c395
< OBJECTID num
< '='
< INT_CONST 12
---
> num=#335 INT_CONST 12
1144,1146c400
< OBJECTID num
< '='
< INT_CONST 13
---
> num=#337 INT_CONST 13
1151,1153c405
< OBJECTID num
< '='
< INT_CONST 14
---
> num=#339 INT_CONST 14
1158,1160c410
< OBJECTID num
< '='
< INT_CONST 15
---
> num=#341 INT_CONST 15
1165,1167c415
< OBJECTID num
< '='
< INT_CONST 16
---
> num=#343 INT_CONST 16
1172,1174c420
< OBJECTID num
< '='
< INT_CONST 17
---
> num=#345 INT_CONST 17
1179,1181c425
< OBJECTID num
< '='
< INT_CONST 18
---
> num=#347 INT_CONST 18
1186,1188c430
< OBJECTID num
< '='
< INT_CONST 19
---
> num=#349 INT_CONST 19
1193,1195c435
< OBJECTID num
< '='
< INT_CONST 20
---
> num=#351 INT_CONST 20
1200,1202c440
< OBJECTID num
< '='
< INT_CONST 21
---
> num=#353 INT_CONST 21
1228,1273c466,478
< ';'
< '}'
< ')'
< ';'
< '}'
< '}'
< ';'
< OBJECTID prompt
< '('
< ')'
< ':'
< TYPEID Bool
< '{'
< '{'
< '('
< LET
< OBJECTID ans
< ':'
< TYPEID String
< IN
< '{'
< OBJECTID out_string
< '('
< STR_CONST "Would you like to continue with the next generation? \n"
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "Please use lowercase y or n for your answer [y]: "
< ')'
< ';'
< OBJECTID ans
< ASSIGN
< OBJECTID in_string
< '('
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "\n"
< ')'
< ';'
< IF
< OBJECTID ans
< '='
< STR_CONST "n"
---
> ;});}};prompt():Bool{{(#368 LET
> ans:Str#368 IN
> g#368 IN
> {out_str#370 IN
> g(#370 STR_CONST "Would you like to continue with the next generation? \\n"
> );out_str#371 IN
> g(#371 STR_CONST "Please use lowercase y or n for your answer [y]: "
> );ans<-#372 IN
> _str#372 IN
> g();out_str#373 IN
> g(#373 STR_CONST "\\n"
> );#374 IF
> ans=#374 STR_CONST "n"
1279,1323c484,497
< ';'
< '}'
< ')'
< ';'
< '}'
< '}'
< ';'
< OBJECTID prompt2
< '('
< ')'
< ':'
< TYPEID Bool
< '{'
< '('
< LET
< OBJECTID ans
< ':'
< TYPEID String
< IN
< '{'
< OBJECTID out_string
< '('
< STR_CONST "\n\n"
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "Would you like to choose a background pattern? \n"
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "Please use lowercase y or n for your answer [n]: "
< ')'
< ';'
< OBJECTID ans
< ASSIGN
< OBJECTID in_string
< '('
< ')'
< ';'
< IF
< OBJECTID ans
< '='
< STR_CONST "y"
---
> ;});}};prompt#385 INT_CONST 2
> ():Bool{(#386 LET
> ans:Str#386 IN
> g#386 IN
> {out_str#388 IN
> g(#388 STR_CONST "\\n\\n"
> );out_str#389 IN
> g(#389 STR_CONST "Would you like to choose a background pattern? \\n"
> );out_str#390 IN
> g(#390 STR_CONST "Please use lowercase y or n for your answer [n]: "
> );ans<-#391 IN
> _str#391 IN
> g();#392 IF
> ans=#392 STR_CONST "y"
1329,1337c503,504
< ';'
< '}'
< ')'
< '}'
< ';'
< '}'
< ';'
< CLASS
< TYPEID Main
---
> ;})};};#404 CLASS
> Ma#404 IN
1339,1434c506,533
< TYPEID CellularAutomaton
< '{'
< OBJECTID cells
< ':'
< TYPEID CellularAutomaton
< ';'
< OBJECTID main
< '('
< ')'
< ':'
< TYPEID SELF_TYPE
< '{'
< '{'
< '('
< LET
< OBJECTID continue
< ':'
< TYPEID Bool
< IN
< '('
< LET
< OBJECTID choice
< ':'
< TYPEID String
< IN
< '{'
< OBJECTID out_string
< '('
< STR_CONST "Welcome to the Game of Life.\n"
< ')'
< ';'
< OBJECTID out_string
< '('
< STR_CONST "There are many initial states to choose from. \n"
< ')'
< ';'
< WHILE
< OBJECTID prompt2
< '('
< ')'
< LOOP
< '{'
< OBJECTID continue
< ASSIGN
< BOOL_CONST true
< ';'
< OBJECTID choice
< ASSIGN
< OBJECTID option
< '('
< ')'
< ';'
< OBJECTID cells
< ASSIGN
< '('
< NEW
< TYPEID CellularAutomaton
< ')'
< '.'
< OBJECTID init
< '('
< OBJECTID choice
< ')'
< ';'
< OBJECTID cells
< '.'
< OBJECTID print
< '('
< ')'
< ';'
< WHILE
< OBJECTID continue
< LOOP
< IF
< OBJECTID prompt
< '('
< ')'
< THEN
< '{'
< OBJECTID cells
< '.'
< OBJECTID evolve
< '('
< ')'
< ';'
< OBJECTID cells
< '.'
< OBJECTID print
< '('
< ')'
< ';'
< '}'
< ELSE
< OBJECTID continue
< ASSIGN
< BOOL_CONST false
---
> CellularAutomaton{cells:CellularAutomaton;ma#407 IN
> ():{{(#409 LET
> cont#409 IN
> ue:Bool#409 IN
> (#410 LET
> choice:Str#410 IN
> g#410 IN
> {out_str#412 IN
> g(#412 STR_CONST "Welcome to the Game of Life.\\n"
> );out_str#413 IN
> g(#413 STR_CONST "There are many initial states to choose from. \\n"
> );#414 WHILE
> prompt#414 INT_CONST 2
> ()#414 LOOP
> {cont#416 IN
> ue<-#416 BOOL_CONST true
> ;choice<-option();cells<-(#418 NEW
> CellularAutomaton).#418 IN
> it(choice);cells.pr#419 IN
> t();#420 WHILE
> cont#420 IN
> ue#420 LOOP
> IF
> prompt()#421 THEN
> {cells.evolve();cells.pr#424 IN
> t();}#426 ELSE
> cont#427 IN
> ue<-#427 BOOL_CONST false
1437,1451c536,537
< ';'
< '}'
< POOL
< ';'
< OBJECTID self
< ';'
< '}'
< ')'
< ')'
< ';'
< '}'
< '}'
< ';'
< '}'
< ';'
---
> ;}#431 POOL
> ;self;}));}};};
\ No newline at end of file
