2c2
< TYPEID Main
---
> Ma#1 IN
4,22c4,6
< TYPEID IO
< '{'
< OBJECTID pal
< '('
< OBJECTID s
< ':'
< TYPEID String
< ')'
< ':'
< TYPEID Bool
< '{'
< IF
< OBJECTID s
< '.'
< OBJECTID length
< '('
< ')'
< '='
< INT_CONST 0
---
> IO{pal(s:Str#2 IN
> g):Bool{#3 IF
> s.length()=#3 INT_CONST 0
27,33c11
< OBJECTID s
< '.'
< OBJECTID length
< '('
< ')'
< '='
< INT_CONST 1
---
> s.length()=#5 INT_CONST 1
38,79c16,23
< OBJECTID s
< '.'
< OBJECTID substr
< '('
< INT_CONST 0
< ','
< INT_CONST 1
< ')'
< '='
< OBJECTID s
< '.'
< OBJECTID substr
< '('
< OBJECTID s
< '.'
< OBJECTID length
< '('
< ')'
< '-'
< INT_CONST 1
< ','
< INT_CONST 1
< ')'
< THEN
< OBJECTID pal
< '('
< OBJECTID s
< '.'
< OBJECTID substr
< '('
< INT_CONST 1
< ','
< OBJECTID s
< '.'
< OBJECTID length
< '('
< ')'
< '-'
< INT_CONST 2
< ')'
< ')'
< ELSE
---
> s.substr(#7 INT_CONST 0
> ,#7 INT_CONST 1
> )=s.substr(s.length()-#7 INT_CONST 1
> ,#7 INT_CONST 1
> )#8 THEN
> pal(s.substr(#8 INT_CONST 1
> ,s.length()-#8 INT_CONST 2
> ))#9 ELSE
84,130c28,43
< '}'
< ';'
< OBJECTID i
< ':'
< TYPEID Int
< ';'
< OBJECTID main
< '('
< ')'
< ':'
< TYPEID SELF_TYPE
< '{'
< '{'
< OBJECTID i
< ASSIGN
< '~'
< INT_CONST 1
< ';'
< OBJECTID out_string
< '('
< STR_CONST "enter a string\n"
< ')'
< ';'
< IF
< OBJECTID pal
< '('
< OBJECTID in_string
< '('
< ')'
< ')'
< THEN
< OBJECTID out_string
< '('
< STR_CONST "that was a palindrome\n"
< ')'
< ELSE
< OBJECTID out_string
< '('
< STR_CONST "that was not a palindrome\n"
< ')'
< FI
< ';'
< '}'
< '}'
< ';'
< '}'
< ';'
---
> };i:#13 IN
> t;ma#15 IN
> ():{{i<-~#17 INT_CONST 1
> ;out_str#18 IN
> g(#18 STR_CONST "enter a string\\n"
> );#19 IF
> pal(#19 IN
> _str#19 IN
> g())#20 THEN
> out_str#20 IN
> g(#20 STR_CONST "that was a palindrome\\n"
> )#21 ELSE
> out_str#21 IN
> g(#21 STR_CONST "that was not a palindrome\\n"
> )#22 FI
> ;}};};
\ No newline at end of file
