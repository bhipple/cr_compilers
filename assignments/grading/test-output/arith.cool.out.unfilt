#name "./arith.cool"
*)**#7 CLASS
A{var:#9 IN
t<-#9 INT_CONST 0
;value():#11 IN
t{var};set_var(num:#13 IN
t):{{var<-num;self;}};method#20 INT_CONST 1
(num:#20 IN
t):{self};method#24 INT_CONST 2
(num#24 INT_CONST 1
:#24 IN
t,num#24 INT_CONST 2
:#24 IN
t):B{(#25 LET
x:#25 IN
t#25 IN
{x<-num#27 INT_CONST 1
+num#27 INT_CONST 2
;(#28 NEW
B).set_var(x);})};method#33 INT_CONST 3
(num:#33 IN
t):C{(#34 LET
x:#34 IN
t#34 IN
{x<-~num;(#37 NEW
C).set_var(x);})};method#42 INT_CONST 4
(num#42 INT_CONST 1
:#42 IN
t,num#42 INT_CONST 2
:#42 IN
t):D{#43 IF
num#43 INT_CONST 2
<num#43 INT_CONST 1
#43 THEN
(#44 LET
x:#44 IN
t#44 IN
{x<-num#46 INT_CONST 1
-num#46 INT_CONST 2
;(#47 NEW
D).set_var(x);})#50 ELSE
(#51 LET
x:#51 IN
t#51 IN
{x<-num#53 INT_CONST 2
-num#53 INT_CONST 1
;(#54 NEW
D).set_var(x);})#57 FI
};method#60 INT_CONST 5
(num:#60 IN
t):E{(#61 LET
x:#61 IN
t<-#61 INT_CONST 1
#61 IN
{(#63 LET
y:#63 IN
t<-#63 INT_CONST 1
#63 IN
#64 WHILE
y<=num#64 LOOP
{x<-x*y;y<-y+#67 INT_CONST 1
;}#69 POOL
);(#71 NEW
E).set_var(x);})};};#78 CLASS
B#78 INHERITS
A{method#80 INT_CONST 5
(num:#80 IN
t):E{(#81 LET
x:#81 IN
t#81 IN
{x<-num*num;(#84 NEW
E).set_var(x);})};};#91 CLASS
C#91 INHERITS
B{method#93 INT_CONST 6
(num:#93 IN
t):A{(#94 LET
x:#94 IN
t#94 IN
{x<-~num;(#97 NEW
A).set_var(x);})};method#102 INT_CONST 5
(num:#102 IN
t):E{(#103 LET
x:#103 IN
t#103 IN
{x<-num*num*num;(#106 NEW
E).set_var(x);})};};#113 CLASS
D#113 INHERITS
B{method#115 INT_CONST 7
(num:#115 IN
t):Bool{(#116 LET
x:#116 IN
t<-num#116 IN
#117 IF
x<#117 INT_CONST 0
#117 THEN
method#117 INT_CONST 7
(~x)#117 ELSE
#118 IF
#118 INT_CONST 0
=x#118 THEN
#118 BOOL_CONST true
#118 ELSE
#119 IF
#119 INT_CONST 1
=x#119 THEN
#119 BOOL_CONST false
#119 ELSE
#120 IF
#120 INT_CONST 2
=x#120 THEN
#120 BOOL_CONST false
#120 ELSE
method#121 INT_CONST 7
(x-#121 INT_CONST 3
)#122 FI
#122 FI
#122 FI
#122 FI
)};};#128 CLASS
E#128 INHERITS
D{method#130 INT_CONST 6
(num:#130 IN
t):A{(#131 LET
x:#131 IN
t#131 IN
{x<-num/#133 INT_CONST 8
;(#134 NEW
A).set_var(x);})};};))#155 CLASS
A#155 INT_CONST 2
I{c#157 INT_CONST 2
i(char:Str#157 IN
g):#157 IN
t{#158 IF
char=#158 STR_CONST "0"
#158 THEN
#158 INT_CONST 0
#158 ELSE
#159 IF
char=#159 STR_CONST "1"
#159 THEN
#159 INT_CONST 1
#159 ELSE
#160 IF
char=#160 STR_CONST "2"
#160 THEN
#160 INT_CONST 2
#160 ELSE
#161 IF
char=#161 STR_CONST "3"
#161 THEN
#161 INT_CONST 3
#161 ELSE
#162 IF
char=#162 STR_CONST "4"
#162 THEN
#162 INT_CONST 4
#162 ELSE
#163 IF
char=#163 STR_CONST "5"
#163 THEN
#163 INT_CONST 5
#163 ELSE
#164 IF
char=#164 STR_CONST "6"
#164 THEN
#164 INT_CONST 6
#164 ELSE
#165 IF
char=#165 STR_CONST "7"
#165 THEN
#165 INT_CONST 7
#165 ELSE
#166 IF
char=#166 STR_CONST "8"
#166 THEN
#166 INT_CONST 8
#166 ELSE
#167 IF
char=#167 STR_CONST "9"
#167 THEN
#167 INT_CONST 9
#167 ELSE
{abort();#168 INT_CONST 0
;}#170 FI
#170 FI
#170 FI
#170 FI
#170 FI
#170 FI
#170 FI
#170 FI
#170 FI
#170 FI
};i#176 INT_CONST 2
c(i:#176 IN
t):Str#176 IN
g{#177 IF
i=#177 INT_CONST 0
#177 THEN
#177 STR_CONST "0"
#177 ELSE
#178 IF
i=#178 INT_CONST 1
#178 THEN
#178 STR_CONST "1"
#178 ELSE
#179 IF
i=#179 INT_CONST 2
#179 THEN
#179 STR_CONST "2"
#179 ELSE
#180 IF
i=#180 INT_CONST 3
#180 THEN
#180 STR_CONST "3"
#180 ELSE
#181 IF
i=#181 INT_CONST 4
#181 THEN
#181 STR_CONST "4"
#181 ELSE
#182 IF
i=#182 INT_CONST 5
#182 THEN
#182 STR_CONST "5"
#182 ELSE
#183 IF
i=#183 INT_CONST 6
#183 THEN
#183 STR_CONST "6"
#183 ELSE
#184 IF
i=#184 INT_CONST 7
#184 THEN
#184 STR_CONST "7"
#184 ELSE
#185 IF
i=#185 INT_CONST 8
#185 THEN
#185 STR_CONST "8"
#185 ELSE
#186 IF
i=#186 INT_CONST 9
#186 THEN
#186 STR_CONST "9"
#186 ELSE
{abort();#187 STR_CONST ""
;}#188 FI
#188 FI
#188 FI
#188 FI
#188 FI
#188 FI
#188 FI
#188 FI
#188 FI
#188 FI
};a#199 INT_CONST 2
i(s:Str#199 IN
g):#199 IN
t{#200 IF
s.length()=#200 INT_CONST 0
#200 THEN
#200 INT_CONST 0
#200 ELSE
#201 IF
s.substr(#201 INT_CONST 0
,#201 INT_CONST 1
)=#201 STR_CONST "-"
#201 THEN
~a#201 INT_CONST 2
i_aux(s.substr(#201 INT_CONST 1
,s.length()-#201 INT_CONST 1
))#201 ELSE
#202 IF
s.substr(#202 INT_CONST 0
,#202 INT_CONST 1
)=#202 STR_CONST "+"
#202 THEN
a#202 INT_CONST 2
i_aux(s.substr(#202 INT_CONST 1
,s.length()-#202 INT_CONST 1
))#202 ELSE
a#203 INT_CONST 2
i_aux(s)#204 FI
#204 FI
#204 FI
};a#211 INT_CONST 2
i_aux(s:Str#211 IN
g):#211 IN
t{(#212 LET
#212 IN
t:#212 IN
t<-#212 INT_CONST 0
#212 IN
{(#214 LET
j:#214 IN
t<-s.length()#214 IN
(#215 LET
i:#215 IN
t<-#215 INT_CONST 0
#215 IN
#216 WHILE
i<j#216 LOOP
{#218 IN
t<-#218 IN
t*#218 INT_CONST 10
+c#218 INT_CONST 2
i(s.substr(i,#218 INT_CONST 1
));i<-i+#219 INT_CONST 1
;}#221 POOL
));#224 IN
t;})};i#232 INT_CONST 2
a(i:#232 IN
t):Str#232 IN
g{#233 IF
i=#233 INT_CONST 0
#233 THEN
#233 STR_CONST "0"
#233 ELSE
#234 IF
#234 INT_CONST 0
<i#234 THEN
i#234 INT_CONST 2
a_aux(i)#234 ELSE
#235 STR_CONST "-"
.concat(i#235 INT_CONST 2
a_aux(i*~#235 INT_CONST 1
))#236 FI
#236 FI
};i#241 INT_CONST 2
a_aux(i:#241 IN
t):Str#241 IN
g{#242 IF
i=#242 INT_CONST 0
#242 THEN
#242 STR_CONST ""
#242 ELSE
(#243 LET
next:#243 IN
t<-i/#243 INT_CONST 10
#243 IN
i#244 INT_CONST 2
a_aux(next).concat(i#244 INT_CONST 2
c(i-next*#244 INT_CONST 10
)))#246 FI
};};#251 CLASS
Ma#251 IN
#251 INHERITS
IO{char:Str#253 IN
g;avar:A;a_var:A;flag:Bool<-#256 BOOL_CONST true
;menu():Str#259 IN
g{{out_str#261 IN
g(#261 STR_CONST "\\n\\tTo add a number to "
);pr#262 IN
t(avar);out_str#263 IN
g(#263 STR_CONST "...enter a:\\n"
);out_str#264 IN
g(#264 STR_CONST "\\tTo negate "
);pr#265 IN
t(avar);out_str#266 IN
g(#266 STR_CONST "...enter b:\\n"
);out_str#267 IN
g(#267 STR_CONST "\\tTo find the difference between "
);pr#268 IN
t(avar);out_str#269 IN
g(#269 STR_CONST "and another number...enter c:\\n"
);out_str#270 IN
g(#270 STR_CONST "\\tTo find the factorial of "
);pr#271 IN
t(avar);out_str#272 IN
g(#272 STR_CONST "...enter d:\\n"
);out_str#273 IN
g(#273 STR_CONST "\\tTo square "
);pr#274 IN
t(avar);out_str#275 IN
g(#275 STR_CONST "...enter e:\\n"
);out_str#276 IN
g(#276 STR_CONST "\\tTo cube "
);pr#277 IN
t(avar);out_str#278 IN
g(#278 STR_CONST "...enter f:\\n"
);out_str#279 IN
g(#279 STR_CONST "\\tTo find out if "
);pr#280 IN
t(avar);out_str#281 IN
g(#281 STR_CONST "is a multiple of 3...enter g:\\n"
);out_str#282 IN
g(#282 STR_CONST "\\tTo divide "
);pr#283 IN
t(avar);out_str#284 IN
g(#284 STR_CONST "by 8...enter h:\\n"
);out_str#285 IN
g(#285 STR_CONST "\\tTo get a new number...enter j:\\n"
);out_str#286 IN
g(#286 STR_CONST "\\tTo quit...enter q:\\n\\n"
);#287 IN
_str#287 IN
g();}};prompt():Str#291 IN
g{{out_str#293 IN
g(#293 STR_CONST "\\n"
);out_str#294 IN
g(#294 STR_CONST "Please enter a number...  "
);#295 IN
_str#295 IN
g();}};get_#299 IN
t():#299 IN
t{{(#301 LET
z:A#301 INT_CONST 2
I<-#301 NEW
A#301 INT_CONST 2
I#301 IN
(#302 LET
s:Str#302 IN
g<-prompt()#302 IN
z.a#303 INT_CONST 2
i(s)));}};is_even(num:#309 IN
t):Bool{(#310 LET
x:#310 IN
t<-num#310 IN
#311 IF
x<#311 INT_CONST 0
#311 THEN
is_even(~x)#311 ELSE
#312 IF
#312 INT_CONST 0
=x#312 THEN
#312 BOOL_CONST true
#312 ELSE
#313 IF
#313 INT_CONST 1
=x#313 THEN
#313 BOOL_CONST false
#313 ELSE
is_even(x-#314 INT_CONST 2
)#315 FI
#315 FI
#315 FI
)};#319 CLASS
_type(var:A):{#320 CASE
var#320 OF
a:A#321 DARROW
out_str#321 IN
g(#321 STR_CONST "Class type is now A\\n"
);b:B#322 DARROW
out_str#322 IN
g(#322 STR_CONST "Class type is now B\\n"
);c:C#323 DARROW
out_str#323 IN
g(#323 STR_CONST "Class type is now C\\n"
);d:D#324 DARROW
out_str#324 IN
g(#324 STR_CONST "Class type is now D\\n"
);e:E#325 DARROW
out_str#325 IN
g(#325 STR_CONST "Class type is now E\\n"
);o:Object#326 DARROW
out_str#326 IN
g(#326 STR_CONST "Oooops\\n"
);#327 ESAC
};pr#330 IN
t(var:A):{(#331 LET
z:A#331 INT_CONST 2
I<-#331 NEW
A#331 INT_CONST 2
I#331 IN
{out_str#333 IN
g(z.i#333 INT_CONST 2
a(var.value()));out_str#334 IN
g(#334 STR_CONST " "
);})};ma#339 IN
():Object{{avar<-(#341 NEW
A);#342 WHILE
flag#342 LOOP
{out_str#345 IN
g(#345 STR_CONST "number "
);pr#346 IN
t(avar);#347 IF
is_even(avar.value())#347 THEN
out_str#348 IN
g(#348 STR_CONST "is even!\\n"
)#349 ELSE
out_str#350 IN
g(#350 STR_CONST "is odd!\\n"
)#351 FI
;#353 CLASS
_type(avar);char<-menu();#355 IF
char=#355 STR_CONST "a"
#355 THEN
{a_var<-(#357 NEW
A).set_var(get_#357 IN
t());avar<-(#358 NEW
B).method#358 INT_CONST 2
(avar.value(),a_var.value());}#359 ELSE
#360 IF
char=#360 STR_CONST "b"
#360 THEN
#361 CASE
avar#361 OF
c:C#362 DARROW
avar<-c.method#362 INT_CONST 6
(c.value());a:A#363 DARROW
avar<-a.method#363 INT_CONST 3
(a.value());o:Object#364 DARROW
{out_str#365 IN
g(#365 STR_CONST "Oooops\\n"
);abort();#366 INT_CONST 0
;};#368 ESAC
#368 ELSE
#369 IF
char=#369 STR_CONST "c"
#369 THEN
{a_var<-(#371 NEW
A).set_var(get_#371 IN
t());avar<-(#372 NEW
D).method#372 INT_CONST 4
(avar.value(),a_var.value());}#373 ELSE
#374 IF
char=#374 STR_CONST "d"
#374 THEN
avar<-(#374 NEW
C)@A.method#374 INT_CONST 5
(avar.value())#374 ELSE
#376 IF
char=#376 STR_CONST "e"
#376 THEN
avar<-(#376 NEW
C)@B.method#376 INT_CONST 5
(avar.value())#376 ELSE
#378 IF
char=#378 STR_CONST "f"
#378 THEN
avar<-(#378 NEW
C)@C.method#378 INT_CONST 5
(avar.value())#378 ELSE
#380 IF
char=#380 STR_CONST "g"
#380 THEN
#381 IF
((#381 NEW
D).method#381 INT_CONST 7
(avar.value()))#382 THEN
{out_str#384 IN
g(#384 STR_CONST "number "
);pr#385 IN
t(avar);out_str#386 IN
g(#386 STR_CONST "is divisible by 3.\\n"
);}#388 ELSE
{out_str#390 IN
g(#390 STR_CONST "number "
);pr#391 IN
t(avar);out_str#392 IN
g(#392 STR_CONST "is not divisible by 3.\\n"
);}#394 FI
#394 ELSE
#395 IF
char=#395 STR_CONST "h"
#395 THEN
(#396 LET
x:A#396 IN
{x<-(#398 NEW
E).method#398 INT_CONST 6
(avar.value());(#399 LET
r:#399 IN
t<-(avar.value()-(x.value()*#399 INT_CONST 8
))#399 IN
{out_str#401 IN
g(#401 STR_CONST "number "
);pr#402 IN
t(avar);out_str#403 IN
g(#403 STR_CONST "is equal to "
);pr#404 IN
t(x);out_str#405 IN
g(#405 STR_CONST "times 8 with a remainder of "
);(#406 LET
a:A#406 INT_CONST 2
I<-#406 NEW
A#406 INT_CONST 2
I#406 IN
{out_str#408 IN
g(a.i#408 INT_CONST 2
a(r));out_str#409 IN
g(#409 STR_CONST "\\n"
);});});avar<-x;})#417 ELSE
#418 IF
char=#418 STR_CONST "j"
#418 THEN
avar<-(#418 NEW
A)#419 ELSE
#420 IF
char=#420 STR_CONST "q"
#420 THEN
flag<-#420 BOOL_CONST false
#421 ELSE
avar<-(#422 NEW
A).method#422 INT_CONST 1
(avar.value())#423 FI
#423 FI
#423 FI
#423 FI
#423 FI
#423 FI
#423 FI
#423 FI
#423 FI
#423 FI
;}#425 POOL
;}};};