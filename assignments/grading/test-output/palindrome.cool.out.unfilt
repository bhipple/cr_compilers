#name "./palindrome.cool"
#1 CLASS
Ma#1 IN
#1 INHERITS
IO{pal(s:Str#2 IN
g):Bool{#3 IF
s.length()=#3 INT_CONST 0
#4 THEN
#4 BOOL_CONST true
#5 ELSE
#5 IF
s.length()=#5 INT_CONST 1
#6 THEN
#6 BOOL_CONST true
#7 ELSE
#7 IF
s.substr(#7 INT_CONST 0
,#7 INT_CONST 1
)=s.substr(s.length()-#7 INT_CONST 1
,#7 INT_CONST 1
)#8 THEN
pal(s.substr(#8 INT_CONST 1
,s.length()-#8 INT_CONST 2
))#9 ELSE
#9 BOOL_CONST false
#10 FI
#10 FI
#10 FI
};i:#13 IN
t;ma#15 IN
():{{i<-~#17 INT_CONST 1
;out_str#18 IN
g(#18 STR_CONST "enter a string\\n"
);#19 IF
pal(#19 IN
_str#19 IN
g())#20 THEN
out_str#20 IN
g(#20 STR_CONST "that was a palindrome\\n"
)#21 ELSE
out_str#21 IN
g(#21 STR_CONST "that was not a palindrome\\n"
)#22 FI
;}};};